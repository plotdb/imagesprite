// Generated by LiveScript 1.6.0
(function(){
  var fs, path, recurse, files;
  fs = require('fs');
  path = require('path');
  recurse = function(root, config, list, relpath){
    var files, i$, len$, file, results$ = [];
    config == null && (config = {});
    list == null && (list = []);
    relpath == null && (relpath = '.');
    if (!fs.statSync(path.join(root, relpath)).isDirectory()) {
      if (!config.rule.exec(relpath)) {
        return;
      }
      list.push({
        root: root,
        path: relpath
      });
      return;
    }
    files = fs.readdirSync(path.join(root, relpath)).map(function(it){
      return path.join(relpath, it);
    });
    for (i$ = 0, len$ = files.length; i$ < len$; ++i$) {
      file = files[i$];
      results$.push(recurse(root, config, list, file));
    }
    return results$;
  };
  files = function(root, config){
    var list;
    recurse(root, config, list = []);
    return list;
  };
  module.exports = {
    files: files,
    recurse: recurse
  };
}).call(this);
